[user]
    name = Nicolas Cuervo
    email = cuervonicolas@gmail.com

[github]
    user = primercuervo

[core]
    excludesfile = ~/.gitignore_global
    editor = vim
    autocrlf = input

[color]
    ui = auto
[color "branch"]
    current =  yellow reverse
    local = yellow
    remote = green
[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold
[color "status"]
    added = yellow
    changed = green
    untracked = cyan

[alias]
    st = status
    stat = status
    ci = commit
    cm = commit -m
    br = branch
    co = checkout
    cr = clone --recursive
    df = diff
    dc = diff --cached
    lg = log -p
    lol = log --graph --decorate --pretty=oneline --abbrev-commit
    lola = log --graph --decorate --pretty=oneline --abbrev-commit --all
    ls = ls-files
    up = fetch --all -p
    cp = cherry-pick
    cob = checkout -b
    ld = !git pull --rebase --prune $@ && git submodule update --init --recursive
    save = ~git add -A && git commit -m 'SAVEPOINT'
    unstage = reset --hard HEAD
    # Starting commit messages with # means they will get ignored in interactive rebases
    wip = commit -am "#WIP"
    undo = reset HEAD~1 --mixed
    amend = commit --amend -a --reuse-message=HEAD
    # Hard reset, but save to a savepoint first
    wipe = !git add -A && git commit -qm 'WIPE SAVEPOINT' && git reset HEAD~1 --hard
    # Delete all branches that are merged into a given branch (default:master)
    bclean = "!f() { git branch --merged ${1-master} | grep -v " ${1-master}$" | xargs -r git branch -d; }; f"
    # Check out a branch, then clean out all the branches that are merged into this
    bdone = "!f() {git checkout ${1-master} && git up && git bclean ${1-master}; }; f"
    # show files ignored by git
    ign = ls-files -o -i --exclude-standard

[push]
    default = simple

[merge]
    tool = meld

[mergetool]
    keepBackup = false
